basePath: /api/v1
definitions:
  gin.H:
    additionalProperties: {}
    type: object
  github_com_rowjay007_event-bookie_internal_models.User:
    properties:
      created_at:
        type: string
      email:
        type: string
      id:
        type: integer
      name:
        type: string
      password:
        type: string
      role:
        type: string
      updated_at:
        type: string
    type: object
  internal_handlers.ForgotPasswordRequest:
    properties:
      email:
        type: string
    required:
    - email
    type: object
  internal_handlers.LoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  internal_handlers.ResetPasswordRequest:
    properties:
      email:
        type: string
      newPassword:
        type: string
    required:
    - email
    - newPassword
    type: object
host: localhost:8080
info:
  contact: {}
  description: The Event Bookie API is a powerful platform designed to streamline
    event management and booking processes. It provides a comprehensive set of features
    for creating, managing, and discovering events, handling bookings, managing venues,
    processing payments, and facilitating organizer interactions.
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  title: Event Bookie API
  version: "1.0"
paths:
  /api/v1/auth/forgot-password:
    post:
      consumes:
      - application/json
      description: Forgot password
      parameters:
      - description: Forgot Password
        in: body
        name: forgotPassword
        required: true
        schema:
          $ref: '#/definitions/internal_handlers.ForgotPasswordRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gin.H'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
      summary: Forgot password
      tags:
      - Auth
  /api/v1/auth/login:
    post:
      consumes:
      - application/json
      description: User login
      parameters:
      - description: Login
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/internal_handlers.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gin.H'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/gin.H'
      summary: User login
      tags:
      - Auth
  /api/v1/auth/logout:
    post:
      consumes:
      - application/json
      description: User logout
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gin.H'
      summary: User logout
      tags:
      - Auth
  /api/v1/auth/reset-password:
    post:
      consumes:
      - application/json
      description: Reset password
      parameters:
      - description: Reset Password
        in: body
        name: resetPassword
        required: true
        schema:
          $ref: '#/definitions/internal_handlers.ResetPasswordRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gin.H'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
      summary: Reset password
      tags:
      - Auth
  /api/v1/secured/profile:
    get:
      consumes:
      - application/json
      description: Get user profile
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_rowjay007_event-bookie_internal_models.User'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get user profile
      tags:
      - Secured
  /api/v1/users:
    get:
      description: Retrieve all users from the database
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/github_com_rowjay007_event-bookie_internal_models.User'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get all users
      tags:
      - users
  /api/v1/users/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
      summary: Delete a user
      tags:
      - Users
    get:
      consumes:
      - application/json
      description: Get a user by ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_rowjay007_event-bookie_internal_models.User'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get a user by ID
      tags:
      - Users
    put:
      consumes:
      - application/json
      description: Update an existing user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      - description: User
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/github_com_rowjay007_event-bookie_internal_models.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_rowjay007_event-bookie_internal_models.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
      summary: Update an existing user
      tags:
      - Users
  /api/v1/users/create:
    post:
      consumes:
      - application/json
      description: Create a new user
      parameters:
      - description: User
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/github_com_rowjay007_event-bookie_internal_models.User'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/github_com_rowjay007_event-bookie_internal_models.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
      summary: Create a new user
      tags:
      - Users
swagger: "2.0"
