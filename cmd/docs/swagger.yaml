basePath: /api/v1
definitions:
  gin.H:
    additionalProperties: {}
    type: object
  github_com_rowjay007_event-bookie_internal_models.Booking:
    properties:
      created_at:
        type: string
      event_id:
        type: integer
      id:
        type: integer
      status:
        type: string
      updated_at:
        type: string
      user_id:
        type: integer
    type: object
  github_com_rowjay007_event-bookie_internal_models.Category:
    properties:
      created_at:
        type: string
      id:
        type: integer
      name:
        type: string
      updated_at:
        type: string
    type: object
  github_com_rowjay007_event-bookie_internal_models.Event:
    properties:
      category_id:
        type: integer
      created_at:
        type: string
      description:
        type: string
      end_time:
        type: string
      id:
        type: integer
      organizer_id:
        type: integer
      start_time:
        type: string
      title:
        type: string
      updated_at:
        type: string
      venue_id:
        type: integer
    type: object
  github_com_rowjay007_event-bookie_internal_models.Organizer:
    properties:
      contact:
        type: string
      created_at:
        type: string
      id:
        type: integer
      name:
        type: string
      updated_at:
        type: string
    type: object
  github_com_rowjay007_event-bookie_internal_models.User:
    properties:
      created_at:
        type: string
      email:
        type: string
      id:
        type: integer
      name:
        type: string
      password:
        type: string
      role:
        type: string
      updated_at:
        type: string
    type: object
  github_com_rowjay007_event-bookie_internal_models.Venue:
    properties:
      capacity:
        type: integer
      created_at:
        type: string
      id:
        type: integer
      location:
        type: string
      name:
        type: string
      updated_at:
        type: string
    type: object
  internal_handlers.ForgotPasswordRequest:
    properties:
      email:
        type: string
    required:
    - email
    type: object
  internal_handlers.LoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  internal_handlers.ResetPasswordRequest:
    properties:
      email:
        type: string
      newPassword:
        type: string
    required:
    - email
    - newPassword
    type: object
host: localhost:8080
info:
  contact: {}
  description: The Event Bookie API is a powerful platform designed to streamline
    event management and booking processes. It provides a comprehensive set of features
    for creating, managing, and discovering events, handling bookings, managing venues,
    processing payments, and facilitating organizer interactions.
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  title: Event Bookie API
  version: "1.0"
paths:
  /api/v1/auth/forgot-password:
    post:
      consumes:
      - application/json
      description: Forgot password
      parameters:
      - description: Forgot Password
        in: body
        name: forgotPassword
        required: true
        schema:
          $ref: '#/definitions/internal_handlers.ForgotPasswordRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gin.H'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
      summary: Forgot password
      tags:
      - Auth
  /api/v1/auth/login:
    post:
      consumes:
      - application/json
      description: User login
      parameters:
      - description: Login
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/internal_handlers.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gin.H'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/gin.H'
      summary: User login
      tags:
      - Auth
  /api/v1/auth/logout:
    post:
      consumes:
      - application/json
      description: User logout
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gin.H'
      summary: User logout
      tags:
      - Auth
  /api/v1/auth/reset-password:
    post:
      consumes:
      - application/json
      description: Reset password
      parameters:
      - description: Reset Password
        in: body
        name: resetPassword
        required: true
        schema:
          $ref: '#/definitions/internal_handlers.ResetPasswordRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gin.H'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
      summary: Reset password
      tags:
      - Auth
  /api/v1/bookings:
    get:
      consumes:
      - application/json
      description: Get all bookings with optional filtering, sorting, and pagination
      parameters:
      - description: Filter by status
        in: query
        name: status
        type: string
      - description: Filter by user ID
        in: query
        name: user_id
        type: integer
      - description: Filter by event ID
        in: query
        name: event_id
        type: integer
      - description: Field to sort by
        in: query
        name: sort_by
        type: string
      - description: Sort order (asc or desc)
        in: query
        name: sort_order
        type: string
      - description: Offset for pagination
        in: query
        name: offset
        type: integer
      - description: Limit for pagination
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Bookings and total count
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Failed to fetch bookings
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get all bookings
      tags:
      - Bookings
    post:
      consumes:
      - application/json
      description: Create a new booking
      parameters:
      - description: Booking to create
        in: body
        name: booking
        required: true
        schema:
          $ref: '#/definitions/github_com_rowjay007_event-bookie_internal_models.Booking'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/github_com_rowjay007_event-bookie_internal_models.Booking'
        "400":
          description: Invalid input
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Failed to create booking
          schema:
            $ref: '#/definitions/gin.H'
      summary: Create a new booking
      tags:
      - Bookings
  /api/v1/bookings/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a booking by ID
      parameters:
      - description: Booking ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Booking deleted successfully
          schema:
            $ref: '#/definitions/gin.H'
        "400":
          description: Invalid input
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Failed to delete booking
          schema:
            $ref: '#/definitions/gin.H'
      summary: Delete a booking by ID
      tags:
      - Bookings
    get:
      consumes:
      - application/json
      description: Get booking by ID
      parameters:
      - description: Booking ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_rowjay007_event-bookie_internal_models.Booking'
        "400":
          description: Invalid input
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Failed to fetch booking
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get booking by ID
      tags:
      - Bookings
    put:
      consumes:
      - application/json
      description: Update an existing booking
      parameters:
      - description: Booking ID
        in: path
        name: id
        required: true
        type: integer
      - description: Booking to update
        in: body
        name: booking
        required: true
        schema:
          $ref: '#/definitions/github_com_rowjay007_event-bookie_internal_models.Booking'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_rowjay007_event-bookie_internal_models.Booking'
        "400":
          description: Invalid input
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Failed to update booking
          schema:
            $ref: '#/definitions/gin.H'
      summary: Update an existing booking
      tags:
      - Bookings
  /api/v1/categories:
    get:
      description: Get all categories with optional filtering, sorting, and pagination
      parameters:
      - description: Filter by name
        in: query
        name: name
        type: string
      - description: Sort by field (e.g., name)
        in: query
        name: sort_by
        type: string
      - description: Sort order (asc or desc)
        in: query
        name: sort_order
        type: string
      - description: Offset for pagination
        in: query
        name: offset
        type: integer
      - description: Limit for pagination
        in: query
        name: limit
        type: integer
      responses:
        "200":
          description: Categories and total count
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Failed to fetch categories
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get all categories with filtering, sorting, and pagination
      tags:
      - Categories
    post:
      consumes:
      - application/json
      description: Create a new category
      parameters:
      - description: Category
        in: body
        name: category
        required: true
        schema:
          $ref: '#/definitions/github_com_rowjay007_event-bookie_internal_models.Category'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/github_com_rowjay007_event-bookie_internal_models.Category'
        "400":
          description: Invalid input
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Create a new category
      tags:
      - Categories
  /api/v1/categories/{id}:
    delete:
      description: Delete a category
      parameters:
      - description: Category ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "204":
          description: Category deleted
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Category not found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Failed to delete category
          schema:
            $ref: '#/definitions/gin.H'
      summary: Delete a category
      tags:
      - Categories
    get:
      description: Get a category by ID
      parameters:
      - description: Category ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_rowjay007_event-bookie_internal_models.Category'
        "404":
          description: Category not found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get a category by ID
      tags:
      - Categories
    put:
      consumes:
      - application/json
      description: Update a category
      parameters:
      - description: Category ID
        in: path
        name: id
        required: true
        type: integer
      - description: Category
        in: body
        name: category
        required: true
        schema:
          $ref: '#/definitions/github_com_rowjay007_event-bookie_internal_models.Category'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_rowjay007_event-bookie_internal_models.Category'
        "400":
          description: Invalid input
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Category not found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Failed to update category
          schema:
            $ref: '#/definitions/gin.H'
      summary: Update a category
      tags:
      - Categories
  /api/v1/events:
    get:
      description: Retrieve all events with optional filtering, sorting, and pagination
      parameters:
      - description: Offset for pagination
        in: query
        name: offset
        type: integer
      - description: Limit for pagination
        in: query
        name: limit
        type: integer
      - description: Filter by title
        in: query
        name: title
        type: string
      - description: Sort by field
        in: query
        name: sort_by
        type: string
      - description: Sort order (asc or desc)
        in: query
        name: sort_order
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Events and total count
          schema:
            $ref: '#/definitions/gin.H'
        "400":
          description: Invalid query parameters
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Failed to fetch events
          schema:
            $ref: '#/definitions/gin.H'
      summary: Retrieve all events with optional filtering, sorting, and pagination
      tags:
      - Events
    post:
      consumes:
      - application/json
      description: Create a new event
      parameters:
      - description: Event object
        in: body
        name: event
        required: true
        schema:
          $ref: '#/definitions/github_com_rowjay007_event-bookie_internal_models.Event'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/github_com_rowjay007_event-bookie_internal_models.Event'
        "400":
          description: Event object is invalid
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Failed to create event
          schema:
            $ref: '#/definitions/gin.H'
      summary: Create a new event
      tags:
      - Events
  /api/v1/events/{id}:
    delete:
      description: Delete an event by ID
      parameters:
      - description: Event ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: Event deleted successfully
        "400":
          description: Invalid event ID
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Failed to delete event
          schema:
            $ref: '#/definitions/gin.H'
      summary: Delete an event by ID
      tags:
      - Events
    get:
      description: Retrieve an event by ID
      parameters:
      - description: Event ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_rowjay007_event-bookie_internal_models.Event'
        "400":
          description: Invalid event ID
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Failed to fetch event
          schema:
            $ref: '#/definitions/gin.H'
      summary: Retrieve an event by ID
      tags:
      - Events
    put:
      consumes:
      - application/json
      description: Update an existing event
      parameters:
      - description: Event ID
        in: path
        name: id
        required: true
        type: integer
      - description: Event object
        in: body
        name: event
        required: true
        schema:
          $ref: '#/definitions/github_com_rowjay007_event-bookie_internal_models.Event'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_rowjay007_event-bookie_internal_models.Event'
        "400":
          description: Event object is invalid
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Failed to update event
          schema:
            $ref: '#/definitions/gin.H'
      summary: Update an existing event
      tags:
      - Events
  /api/v1/organizers:
    get:
      consumes:
      - application/json
      description: Retrieves all organizers with optional filtering, sorting, and
        pagination
      parameters:
      - description: Offset for pagination
        in: query
        name: offset
        type: integer
      - description: Limit for pagination
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Retrieve all organizers
      tags:
      - Organizers
    post:
      consumes:
      - application/json
      description: Creates a new organizer with the provided details
      parameters:
      - description: Organizer object to be created
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/github_com_rowjay007_event-bookie_internal_models.Organizer'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/github_com_rowjay007_event-bookie_internal_models.Organizer'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Create a new organizer
      tags:
      - Organizers
  /api/v1/organizers/{id}:
    delete:
      consumes:
      - application/json
      description: Deletes an organizer by ID
      parameters:
      - description: Organizer ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Delete an organizer by ID
      tags:
      - Organizers
    get:
      consumes:
      - application/json
      description: Retrieves an organizer by ID
      parameters:
      - description: Organizer ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_rowjay007_event-bookie_internal_models.Organizer'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Retrieve an organizer by ID
      tags:
      - Organizers
    put:
      consumes:
      - application/json
      description: Updates an existing organizer with the provided details
      parameters:
      - description: Organizer ID
        in: path
        name: id
        required: true
        type: integer
      - description: Updated organizer object
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/github_com_rowjay007_event-bookie_internal_models.Organizer'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_rowjay007_event-bookie_internal_models.Organizer'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Update an existing organizer
      tags:
      - Organizers
  /api/v1/secured/profile:
    get:
      consumes:
      - application/json
      description: Get user profile
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_rowjay007_event-bookie_internal_models.User'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get user profile
      tags:
      - Secured
  /api/v1/users:
    get:
      description: Get all users with optional filtering, sorting, and pagination
      parameters:
      - description: Filter by name
        in: query
        name: name
        type: string
      - description: Filter by email
        in: query
        name: email
        type: string
      - description: Sort by field (e.g., name, email)
        in: query
        name: sort_by
        type: string
      - description: Sort order (asc or desc)
        in: query
        name: sort_order
        type: string
      - description: Offset for pagination
        in: query
        name: offset
        type: integer
      - description: Limit for pagination
        in: query
        name: limit
        type: integer
      responses:
        "200":
          description: Users and total count
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Failed to fetch users
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get all users with filtering, sorting, and pagination
      tags:
      - users
  /api/v1/users/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
      summary: Delete a user
      tags:
      - Users
    get:
      consumes:
      - application/json
      description: Get a user by ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_rowjay007_event-bookie_internal_models.User'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get a user by ID
      tags:
      - Users
    put:
      consumes:
      - application/json
      description: Update an existing user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      - description: User
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/github_com_rowjay007_event-bookie_internal_models.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_rowjay007_event-bookie_internal_models.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
      summary: Update an existing user
      tags:
      - Users
  /api/v1/users/create:
    post:
      consumes:
      - application/json
      description: Create a new user
      parameters:
      - description: User
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/github_com_rowjay007_event-bookie_internal_models.User'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/github_com_rowjay007_event-bookie_internal_models.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
      summary: Create a new user
      tags:
      - Users
  /api/v1/venues:
    get:
      consumes:
      - application/json
      description: Get all venues with optional filtering, sorting, and pagination
      parameters:
      - description: Offset
        in: query
        name: offset
        type: integer
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Name
        in: query
        name: name
        type: string
      - description: Location
        in: query
        name: location
        type: string
      - description: Sort By
        in: query
        name: sort_by
        type: string
      - description: Sort Order
        in: query
        name: sort_order
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Venues and total count
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get all venues
      tags:
      - Venues
    post:
      consumes:
      - application/json
      description: Create a new venue
      parameters:
      - description: Venue
        in: body
        name: venue
        required: true
        schema:
          $ref: '#/definitions/github_com_rowjay007_event-bookie_internal_models.Venue'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/github_com_rowjay007_event-bookie_internal_models.Venue'
        "400":
          description: Venue is invalid
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Create a new venue
      tags:
      - Venues
  /api/v1/venues/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a venue by ID
      parameters:
      - description: Venue ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Venue deleted successfully
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Delete a venue by ID
      tags:
      - Venues
    get:
      consumes:
      - application/json
      description: Get a venue by ID
      parameters:
      - description: Venue ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_rowjay007_event-bookie_internal_models.Venue'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get a venue by ID
      tags:
      - Venues
    put:
      consumes:
      - application/json
      description: Update an existing venue
      parameters:
      - description: Venue ID
        in: path
        name: id
        required: true
        type: integer
      - description: Venue
        in: body
        name: venue
        required: true
        schema:
          $ref: '#/definitions/github_com_rowjay007_event-bookie_internal_models.Venue'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_rowjay007_event-bookie_internal_models.Venue'
        "400":
          description: Venue is invalid
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Update an existing venue
      tags:
      - Venues
swagger: "2.0"
